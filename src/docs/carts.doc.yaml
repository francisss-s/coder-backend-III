components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: string
          description: Identificador único del carrito (MongoDB ObjectId).
        user_id:
          type: string
          description: Identificador del usuario al que pertenece el carrito.
        products:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: string
                description: ID del producto agregado al carrito.
              quantity:
                type: integer
                description: Cantidad del producto en el carrito.
        status:
          type: string
          enum: [active, purchased]
          description: Estado del carrito.
      required:
        - user_id
        - products
        - status
paths:
        /api/carts:
          post:
            summary: Crea un nuevo carrito.
            tags: [Carts]
            description: Crea un carrito vacío para un usuario.
            security:
              - cookieAuth: []
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Cart"
            responses:
              201:
                description: Carrito creado exitosamente.
              400:
                description: Error en la validación de los datos.
        /api/carts/{user_id}:
          get:
            summary: Obtiene los carritos de un usuario.
            tags: [Carts]
            description: Devuelve los carritos activos de un usuario.
            security:
              - cookieAuth: []
            parameters:
              - name: user_id
                in: path
                required: true
                description: ID del usuario.
                schema:
                  type: string
            responses:
              200:
                description: Lista de carritos obtenida correctamente.
              400:
                description: ID inválido.
              404:
                description: No se encontraron carritos.
        /api/carts/{id}:
          put:
            summary: Actualiza un carrito existente.
            tags: [Carts]
            description: Modifica los productos y cantidades dentro del carrito.
            security:
              - cookieAuth: []
            parameters:
              - name: id
                in: path
                required: true
                description: ID del carrito a actualizar.
                schema:
                  type: string
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      product_id:
                        type: string
                        description: ID del producto en el carrito.
                      quantity:
                        type: integer
                        description: Nueva cantidad del producto.
            responses:
              200:
                description: Carrito actualizado correctamente.
              400:
                description: Error en la validación de los datos.
              404:
                description: Carrito o producto no encontrado.
          delete:
            summary: Elimina un carrito del usuario.
            tags: [Carts]
            description: Borra el carrito identificado por su ID.
            security:
              - cookieAuth: []
            parameters:
              - name: id
                in: path
                required: true
                description: ID del carrito a eliminar.
                schema:
                  type: string
            responses:
              200:
                description: Carrito eliminado correctamente.
              400:
                description: ID inválido.
              404:
                description: Carrito no encontrado.
        /api/carts/{cid}/purchase:
          post:
            summary: Procesa la compra de un carrito.
            tags: [Carts]
            description: Intenta comprar todos los productos dentro del carrito.
            security:
              - cookieAuth: []
            parameters:
              - name: cid
                in: path
                required: true
                description: ID del carrito a procesar.
                schema:
                  type: string
            responses:
              200:
                description: Compra realizada con éxito.
              400:
                description: No se pudo procesar la compra debido a stock insuficiente.
              404:
                description: Carrito no encontrado.
